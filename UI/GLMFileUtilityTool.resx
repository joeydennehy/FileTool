<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="splitContainer1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAGABHCgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAACg5J
        REFUeJzt3T2LJWkZh/Hrfqpnd1RQBFFMTEUxNdBcxC9gYiDoh9BQv4FfwUzFwMjARDCTRRA2MTETFQPH
        dXdm+uXUcxvU6e4V+vSMSvcZz//6wfTMwgZV1VVXPfVev/vjn/q7P/oxHzk7Q1KGqqK7OTtbCrqg6tjT
        JOmRNEAVY/uXpETj2BMg6XgMgBTMAOhxFODx5qOpKuj9qb1uDi17T/3rURTQ1PU/thVUD6ihmu6iBtB1
        ZwIMgB5F9+2Fpga6HQ08qNo2+G2R373xgwHQY9nv+Wc3Z2eDZTgCeEhNM3ewzsmkKO5e3gZAj6O3Pf8Y
        g6988Slf/vwTdqujgIdyfgk//81znn1Q2/7/wKI2AHp0n/nkwpc+V1xeOQp4EAXPz5unTwp6cmDnDxgA
        HUE3zAnTAcDD6G27f53F62VAKZgBkIIZACmYAZCCGQApmAGQghkAKZgBkIIZACmYAZCCGQApmAGQghkA
        KZgBkIIZACmYAZCCGQApmAGQghkAKZgBkIIZACmYAZCCGQApmAGQghkAKZgBkIIZACmYAZCCGQApmAGQ
        ghkAKZgBkIIZACmYAZCCGQApmAGQghkAKZgBkIKdHXsCjmnOeexJiFNVzJ40g+5jT81pqoKmgVcv4NgA
        dMNnP/0prtZJAdsPPZxtAY+Cj3/0KW8/WSiX+YOogt1sRp0Dc1vZD6zgkQGobuay8LPvfYcnw7VQp+fl
        1Y5PfOwn/PXZX5jz8DoeGQCq2O1WisNl1EPZlnk7/n8wVXWz01/XZoxtTb/riCAyAF0fWkhG4JE0TVEU
        9Lb89XBqX4DB/WcCIq8C9G5lLAsFtBv/o2ig+3VPTel/1QU9m1lNz0kdWOiRI4BaFuZu3f595GlJUdTt
        ST8X+oOrKigYjC0GB/6/yBHAxrVQCg6AJAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUzAFIw
        AyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUz
        AFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjAD
        IAUzAFKw4AA0Z0vw7OukLeOMqlev32ePMC1vnm6eLMUPfvorljGYfewJehxVzajB85cX/PBb3+CtUcee
        pAf1/PyvPHvxR+gJBYT8ngFeXKycn/8DqqAPz3hkAGoMuuFXv/09TcesF1VFN1zsVr7/za/x1ttPjj1J
        D+py/Sd/f/8P7NYrigGV87t+fj55efGCvmfjh9AAdM/9itBUDU57P/jvqqDXSdXpz3U3zJ5ULRQNVTG/
        66UWagyq5r0RiAxAVcFsqEFRQWMAoKBOfOh/o6EYdO22UXBnzPd2tNP7Hd3963bkWbBubvaAURs/7DeK
        ew8LT0ZVQUF3bYcASbaVfDvvUYd/2WFL5VbA+n9Qyrxfz2fGfv9Ww7bx38z54SUQGwDppL1m5Q2AFMwA
        RNpOfUoGIEyx3RD0l2cfHHtS9AYwAGmq6Nlcruuxp0RvAAMQpmlGFZVwHVCvZADSNNsdcQF3AuZdAPzP
        GYA0td0KnaGZE2DaggMMQKSQraGKqgk9gqL3nzEAOllzvQCKqqZd1e/kUtHJ6u6bO+Je9VhsKgOgk7U9
        DNQ0RcQ5z/+CAdAJu93ru/3fzQDohLnZv4oBkIIZgDQNdIfcCKRXMQBpuqlRTJ8FEAYgTxXU4G/v+TSg
        DECk2r8wUjIAiTrnvYC6nwEI1LQ3xggwAFI0AyAFMwBSMAMgBTMAUjADIAUzALG8DigDEGa7/adqoad3
        AsoAhNk+CTbXHbWcHXti9AYwAGGaYvg0oPYMQKj3PvBpQBmAOAXUGKw7RwAyAFI0AyAFMwBSsNAA7K+H
        3/zIcfMiEN8IJCDyYnABXcCcVFoDq+k5mb4SSCQGoG7/WoGlmu6MYUDtf45l+EYgAYEBqOv34fVkGYOX
        5yuXa8i34/bzvrtaudhthwDdZMy77hQXgAZqFD2bovn21z/OV79wRsZl8e1dgOucfO5TTwE3/nRxAYDr
        81+DWpqzMfnI24QEoChgNjx9K+zch+4UGYAbvQ2Br/8k2H8ZLGZ+dT93A1IwA5DK+wCEAYh1ufo0oAxA
        qMKPgwkMQKDr634GQAYg0PWG7w0AMgBxbm/8cQQgAyBFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwCJCso3
        gQgDkKf370P0raAi/YUgcXr/PsRiN30aUI4AwhTXTwJO3wcgDECk7sZnAQQeAsQpgGXsv4yidI4ApGAG
        QApmAKRgBkAKZgCkYAZACmYAAnkBUNcMQJqC2SGfQ9crGYA028MAtOMAYQAydTOnzwLIAMTZngAo5nx+
        5CnRm8AAhLk+9m+fBhQGIFB5GUA3DIAUzABIwQyAFMwASMEMgBTMAEjBDIAUzADodFXv34CMDz8dYAB0
        uvZvPq8P/dS/MwA6WZNJ1daB9jMIdzIAsU5/jzjnFbMnDZQfQrmTAQjTDUVxsUv4NmBBFwO/g3SIAQiV
        8G3A0x/j/O8MgBTMAEjBDIAUzABIwQyAFMwASMEMgBTMAEjBDIAUzABIwQyAFMwAhOmejCrvkxdgAOJU
        Fd1NN3RfHntydGQGIExx/Whss5sXx50YHd3ZsSdAj6+p/UjAA4F0jgDi1PZ2nPJFmTIAUjQDIAUzAFIw
        AyAFMwBSMAMgBTMAUjADEKbp7XNZ3T4PIAOQZ/tQVtF+L08GIE/d/Fl7PfbE6MgMQKDZk6K5WhO+D6j7
        GIBE3cBg9tWxp0RHZgACFUA1fj5TBkAKZgCkYAZACmYApGAGQApmAKRgBiDW7fuBlcsAxGmoAd34OJAM
        QJwPb/SOANIZgDhu9LplAOJcH/t7ACADEOd6o2/g4uofx5wUvQEMQDLfCBLPAEjBDECqgJ1/wCwe9Lrz
        Hvl14O2lmNBd7FY4v4TdPPZUPZKGopnA84uV915c0Sf4arAqeHmx4/wKRvX2JeSQs54FXF5tL359lcgA
        bBq6+OU7F/z63TXmeLgBetI1OFveYVne5RT3lQ3M9YJ1vaC7GWNE/Y4nzfvP9/81Ofgp6MgA9GxqwNrF
        By8m/3xxeexJehz7V4HP3taH4pzu905w879+69G4+a+qU8zcPXqyjNrv5+rg4CcyAFTRsxlLb3/HjA23
        +VxubgcuxoE9wyno3kpXc967EZyiGgN6wlgYQPfkrmOgzAAAY8DcTWoZObfE7IfA1dCsVC2vdZz4/6qA
        nitd4+a8z6Gh8Knpntu8znVb2Q+s47EBmF0war9NnO5GcJeu7bsAp7zxw/63uj8MuJnVE5/nW/tjnqp7
        Z9nLgFIwAyAFMwBSqALOdnPy4uKSnmvMCRIp3v7cV/352fv9i3fe5a1lOfYkSXosNWCd/AuhGd7iwN19
        IAAAAABJRU5ErkJggg==
</value>
  </data>
</root>